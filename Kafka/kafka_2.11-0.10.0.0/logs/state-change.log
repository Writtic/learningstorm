[2016-08-06 14:26:23,931] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-08-06 14:26:43,016] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=state.change.logger (state.change.logger)
[2016-08-06 14:27:53,188] TRACE Controller 0 epoch 1 received response {error_code=0} for a request sent to broker 192.168.100.159:9092 (id: 0 rack: null) (state.change.logger)
[2016-08-06 14:28:53,110] TRACE Controller 0 epoch 1 changed partition [test,0] state from NonExistentPartition to NewPartition with assigned replicas 0 (state.change.logger)
[2016-08-06 14:28:53,117] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [test,0] from NonExistentReplica to NewReplica (state.change.logger)
[2016-08-06 14:28:53,130] TRACE Controller 0 epoch 1 changed partition [test,0] from NewPartition to OnlinePartition with leader 0 (state.change.logger)
[2016-08-06 14:28:53,131] TRACE Controller 0 epoch 1 sending become-leader LeaderAndIsr request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition [test,0] (state.change.logger)
[2016-08-06 14:28:53,135] TRACE Controller 0 epoch 1 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 0 for partition test-0 (state.change.logger)
[2016-08-06 14:28:53,141] TRACE Broker 0 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@78cc105e correlation id 1 from controller 0 epoch 1 for partition [test,0] (state.change.logger)
[2016-08-06 14:28:53,145] TRACE Controller 0 epoch 1 changed state of replica 0 for partition [test,0] from NewReplica to OnlineReplica (state.change.logger)
[2016-08-06 14:28:53,153] TRACE Broker 0 handling LeaderAndIsr request correlationId 1 from controller 0 epoch 1 starting the become-leader transition for partition [test,0] (state.change.logger)
[2016-08-06 14:28:53,204] TRACE Broker 0 stopped fetchers as part of become-leader request from controller 0 epoch 1 with correlation id 1 for partition [test,0] (state.change.logger)
[2016-08-06 14:28:53,206] TRACE Broker 0 completed LeaderAndIsr request correlationId 1 from controller 0 epoch 1 for the become-leader transition for partition [test,0] (state.change.logger)
[2016-08-06 14:28:53,209] TRACE Controller 0 epoch 1 received response {error_code=0,partitions=[{topic=test,partition=0,error_code=0}]} for a request sent to broker 192.168.100.159:9092 (id: 0 rack: null) (state.change.logger)
[2016-08-06 14:28:53,212] TRACE Broker 0 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition test-0 in response to UpdateMetadata request sent by controller 0 epoch 1 with correlation id 2 (state.change.logger)
[2016-08-06 14:28:53,213] TRACE Controller 0 epoch 1 received response {error_code=0} for a request sent to broker 192.168.100.159:9092 (id: 0 rack: null) (state.change.logger)
[2016-08-06 14:41:19,932] TRACE Controller 1 epoch 2 started leader election for partition [test,0] (state.change.logger)
[2016-08-06 14:41:19,947] ERROR Controller 1 epoch 2 initiated state change for partition [test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [test,0] is alive. Live brokers are: [Set()], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:335)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:166)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:50)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.server.ZookeeperLeaderElector$$anonfun$startup$1.apply(ZookeeperLeaderElector.scala:48)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.server.ZookeeperLeaderElector.startup(ZookeeperLeaderElector.scala:48)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply$mcV$sp(KafkaController.scala:684)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.controller.KafkaController$$anonfun$startup$1.apply(KafkaController.scala:680)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController.startup(KafkaController.scala:680)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:200)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:37)
	at kafka.Kafka$.main(Kafka.scala:67)
	at kafka.Kafka.main(Kafka.scala)
[2016-08-06 14:41:20,095] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 1 for partition test-0 (state.change.logger)
[2016-08-06 14:41:20,117] TRACE Controller 1 epoch 2 started leader election for partition [test,0] (state.change.logger)
[2016-08-06 14:41:20,132] ERROR Controller 1 epoch 2 initiated state change for partition [test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [test,0] is alive. Live brokers are: [Set(1)], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:433)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:375)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:843)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-08-06 14:41:20,156] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition test-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2016-08-06 14:41:20,168] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.100.159:9093 (id: 1 rack: null) (state.change.logger)
[2016-08-06 14:41:38,759] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 2 for partition test-0 (state.change.logger)
[2016-08-06 14:41:38,760] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 1 for partition test-0 (state.change.logger)
[2016-08-06 14:41:38,761] TRACE Controller 1 epoch 2 started leader election for partition [test,0] (state.change.logger)
[2016-08-06 14:41:38,767] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition test-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 1 (state.change.logger)
[2016-08-06 14:41:38,771] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.100.159:9093 (id: 1 rack: null) (state.change.logger)
[2016-08-06 14:41:38,784] ERROR Controller 1 epoch 2 initiated state change for partition [test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [test,0] is alive. Live brokers are: [Set(1, 2)], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:433)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply$mcV$sp(ReplicaStateMachine.scala:375)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1$$anonfun$apply$mcV$sp$1.apply(ReplicaStateMachine.scala:359)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:33)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply$mcV$sp(ReplicaStateMachine.scala:358)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener$$anonfun$handleChildChange$1.apply(ReplicaStateMachine.scala:357)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.ReplicaStateMachine$BrokerChangeListener.handleChildChange(ReplicaStateMachine.scala:356)
	at org.I0Itec.zkclient.ZkClient$10.run(ZkClient.java:843)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-08-06 14:41:38,837] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition test-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2016-08-06 14:41:38,843] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:44:19,431] TRACE Controller 1 epoch 2 changed partition [my-replicated-topic,0] state from NonExistentPartition to NewPartition with assigned replicas 2,1 (state.change.logger)
[2016-08-06 14:44:19,436] TRACE Controller 1 epoch 2 changed state of replica 2 for partition [my-replicated-topic,0] from NonExistentReplica to NewReplica (state.change.logger)
[2016-08-06 14:44:19,437] TRACE Controller 1 epoch 2 changed state of replica 1 for partition [my-replicated-topic,0] from NonExistentReplica to NewReplica (state.change.logger)
[2016-08-06 14:44:19,449] TRACE Controller 1 epoch 2 changed partition [my-replicated-topic,0] from NewPartition to OnlinePartition with leader 2 (state.change.logger)
[2016-08-06 14:44:19,450] TRACE Controller 1 epoch 2 sending become-leader LeaderAndIsr request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,453] TRACE Controller 1 epoch 2 sending become-follower LeaderAndIsr request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 1 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,453] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition my-replicated-topic-0 (state.change.logger)
[2016-08-06 14:44:19,454] TRACE Controller 1 epoch 2 sending UpdateMetadata request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 1 for partition my-replicated-topic-0 (state.change.logger)
[2016-08-06 14:44:19,456] TRACE Broker 1 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@426fc2bb correlation id 2 from controller 1 epoch 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,457] TRACE Controller 1 epoch 2 changed state of replica 2 for partition [my-replicated-topic,0] from NewReplica to OnlineReplica (state.change.logger)
[2016-08-06 14:44:19,457] TRACE Broker 2 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@61c1c896 correlation id 1 from controller 1 epoch 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,458] TRACE Controller 1 epoch 2 changed state of replica 1 for partition [my-replicated-topic,0] from NewReplica to OnlineReplica (state.change.logger)
[2016-08-06 14:44:19,466] TRACE Broker 1 handling LeaderAndIsr request correlationId 2 from controller 1 epoch 2 starting the become-follower transition for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,469] TRACE Broker 2 handling LeaderAndIsr request correlationId 1 from controller 1 epoch 2 starting the become-leader transition for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,564] TRACE Broker 2 stopped fetchers as part of become-leader request from controller 1 epoch 2 with correlation id 1 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,565] TRACE Broker 2 completed LeaderAndIsr request correlationId 1 from controller 1 epoch 2 for the become-leader transition for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,572] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=my-replicated-topic,partition=0,error_code=0}]} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:44:19,574] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2016-08-06 14:44:19,574] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:44:19,575] TRACE Broker 1 stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,582] TRACE Broker 1 truncated logs and checkpointed recovery boundaries for partition [my-replicated-topic,0] as part of become-follower request with correlation id 2 from controller 1 epoch 2 (state.change.logger)
[2016-08-06 14:44:19,593] TRACE Broker 1 started fetcher to new leader as part of become-follower request from controller 1 epoch 2 with correlation id 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,594] TRACE Broker 1 completed LeaderAndIsr request correlationId 2 from controller 1 epoch 2 for the become-follower transition for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:44:19,599] TRACE Controller 1 epoch 2 received response {error_code=0,partitions=[{topic=my-replicated-topic,partition=0,error_code=0}]} for a request sent to broker 192.168.100.159:9093 (id: 1 rack: null) (state.change.logger)
[2016-08-06 14:44:19,599] TRACE Broker 1 cached leader info (LeaderAndIsrInfo:(Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 3 (state.change.logger)
[2016-08-06 14:44:19,600] TRACE Controller 1 epoch 2 received response {error_code=0} for a request sent to broker 192.168.100.159:9093 (id: 1 rack: null) (state.change.logger)
[2016-08-06 14:47:15,077] TRACE Controller 2 epoch 3 changed state of replica 2 for partition [my-replicated-topic,0] from OnlineReplica to OnlineReplica (state.change.logger)
[2016-08-06 14:47:15,078] TRACE Controller 2 epoch 3 sending become-leader LeaderAndIsr request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:47:15,083] TRACE Controller 2 epoch 3 sending UpdateMetadata request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition my-replicated-topic-0 (state.change.logger)
[2016-08-06 14:47:15,087] TRACE Broker 2 received LeaderAndIsr request org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState@307c764a correlation id 0 from controller 2 epoch 3 for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:47:15,088] WARN Broker 2 ignoring LeaderAndIsr request from controller 2 with correlation id 0 epoch 3 for partition [my-replicated-topic,0] since its associated leader epoch 0 is old. Current leader epoch is 0 (state.change.logger)
[2016-08-06 14:47:15,089] TRACE Controller 2 epoch 3 received response {error_code=0,partitions=[{topic=my-replicated-topic,partition=0,error_code=11}]} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:47:15,090] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 1 (state.change.logger)
[2016-08-06 14:47:15,090] TRACE Controller 2 epoch 3 received response {error_code=0} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:47:15,091] TRACE Controller 2 epoch 3 started leader election for partition [test,0] (state.change.logger)
[2016-08-06 14:47:15,101] ERROR Controller 2 epoch 3 initiated state change for partition [test,0] from OfflinePartition to OnlinePartition failed (state.change.logger)
kafka.common.NoReplicaOnlineException: No replica for partition [test,0] is alive. Live brokers are: [Set(2)], Assigned replicas are: [List(0)]
	at kafka.controller.OfflinePartitionLeaderSelector.selectLeader(PartitionLeaderSelector.scala:75)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:205)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:120)
	at kafka.controller.PartitionStateMachine$$anonfun$triggerOnlinePartitionStateChange$3.apply(PartitionStateMachine.scala:117)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:99)
	at scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:230)
	at scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)
	at scala.collection.mutable.HashMap.foreach(HashMap.scala:99)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:117)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:70)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:335)
	at kafka.controller.KafkaController$$anonfun$1.apply$mcV$sp(KafkaController.scala:166)
	at kafka.server.ZookeeperLeaderElector.elect(ZookeeperLeaderElector.scala:84)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply$mcZ$sp(ZookeeperLeaderElector.scala:146)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply(ZookeeperLeaderElector.scala:141)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener$$anonfun$handleDataDeleted$1.apply(ZookeeperLeaderElector.scala:141)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.server.ZookeeperLeaderElector$LeaderChangeListener.handleDataDeleted(ZookeeperLeaderElector.scala:141)
	at org.I0Itec.zkclient.ZkClient$9.run(ZkClient.java:824)
	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
[2016-08-06 14:47:15,114] TRACE Controller 2 epoch 3 sending UpdateMetadata request (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition my-replicated-topic-0 (state.change.logger)
[2016-08-06 14:47:15,114] TRACE Controller 2 epoch 3 sending UpdateMetadata request (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) to broker 2 for partition test-0 (state.change.logger)
[2016-08-06 14:47:15,116] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2016-08-06 14:47:15,116] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),ReplicationFactor:1),AllReplicas:0) for partition test-0 in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2016-08-06 14:47:15,117] TRACE Controller 2 epoch 3 received response {error_code=0} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:47:21,015] TRACE Controller 2 epoch 3 sending UpdateMetadata request (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2) to broker 2 for partition my-replicated-topic-0 (state.change.logger)
[2016-08-06 14:47:21,016] TRACE Broker 2 cached leader info (LeaderAndIsrInfo:(Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),ReplicationFactor:2),AllReplicas:1,2) for partition my-replicated-topic-0 in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 3 (state.change.logger)
[2016-08-06 14:47:21,017] TRACE Controller 2 epoch 3 received response {error_code=0} for a request sent to broker 192.168.100.159:9094 (id: 2 rack: null) (state.change.logger)
[2016-08-06 14:55:11,556] TRACE Controller 2 epoch 3 started leader election for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:55:11,569] ERROR Controller 2 epoch 3 encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2. (state.change.logger)
[2016-08-06 14:55:11,569] ERROR Controller 2 epoch 3 initiated state change for partition [my-replicated-topic,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:268)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:263)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:262)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:259)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:259)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:203)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:83)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:193)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 20 more
[2016-08-06 14:55:16,607] TRACE Controller 2 epoch 3 started leader election for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:55:16,624] ERROR Controller 2 epoch 3 encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2. (state.change.logger)
[2016-08-06 14:55:16,624] ERROR Controller 2 epoch 3 initiated state change for partition [my-replicated-topic,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:268)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:263)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:262)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:259)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:259)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:203)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:83)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:193)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 20 more
[2016-08-06 14:55:21,640] TRACE Controller 2 epoch 3 started leader election for partition [my-replicated-topic,0] (state.change.logger)
[2016-08-06 14:55:21,644] ERROR Controller 2 epoch 3 encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2. (state.change.logger)
[2016-08-06 14:55:21,644] ERROR Controller 2 epoch 3 initiated state change for partition [my-replicated-topic,0] from OnlinePartition to OnlinePartition failed (state.change.logger)
kafka.common.StateChangeFailedException: encountered error while electing leader for partition [my-replicated-topic,0] due to: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2.
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:368)
	at kafka.controller.PartitionStateMachine.kafka$controller$PartitionStateMachine$$handleStateChange(PartitionStateMachine.scala:207)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:146)
	at kafka.controller.PartitionStateMachine$$anonfun$handleStateChanges$2.apply(PartitionStateMachine.scala:145)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.PartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:145)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:268)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1$$anonfun$apply$mcV$sp$3.apply(KafkaController.scala:263)
	at scala.Option.foreach(Option.scala:257)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply$mcV$sp(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3$$anonfun$apply$1.apply(KafkaController.scala:263)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:231)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:262)
	at kafka.controller.KafkaController$$anonfun$shutdownBroker$3.apply(KafkaController.scala:259)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:94)
	at kafka.controller.KafkaController.shutdownBroker(KafkaController.scala:259)
	at kafka.server.KafkaApis.handleControlledShutdownRequest(KafkaApis.scala:203)
	at kafka.server.KafkaApis.handle(KafkaApis.scala:83)
	at kafka.server.KafkaRequestHandler.run(KafkaRequestHandler.scala:60)
	at java.lang.Thread.run(Thread.java:745)
Caused by: kafka.common.StateChangeFailedException: No other replicas in ISR 2 for [my-replicated-topic,0] besides shutting down brokers 2
	at kafka.controller.ControlledShutdownLeaderSelector.selectLeader(PartitionLeaderSelector.scala:193)
	at kafka.controller.PartitionStateMachine.electLeaderForPartition(PartitionStateMachine.scala:345)
	... 20 more
